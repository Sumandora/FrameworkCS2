#include "WeaponID.hpp"

#include <unordered_map>

#define ITEM(id, name)      \
	{                       \
		WeaponID::id, #name \
	}

const std::unordered_map<WeaponID, const std::string> names{
	ITEM(WEAPON_INVALID, Invalid weapon),
	ITEM(WEAPON_NONE, None),
	ITEM(WEAPON_DEAGLE, Desert Eagle),
	ITEM(WEAPON_ELITE, Dual Berettas),
	ITEM(WEAPON_FIVESEVEN, Five - SeveN),
	ITEM(WEAPON_GLOCK, Glock - 18),
	ITEM(WEAPON_AK47, AK - 47),
	ITEM(WEAPON_AUG, AUG),
	ITEM(WEAPON_AWP, AWP),
	ITEM(WEAPON_FAMAS, FAMAS),
	ITEM(WEAPON_G3SG1, G3SG1),
	ITEM(WEAPON_GALILAR, Galil AR),
	ITEM(WEAPON_M249, M249),
	ITEM(WEAPON_M4A1, M4A4),
	ITEM(WEAPON_MAC10, MAC - 10),
	ITEM(WEAPON_P90, P90),
	ITEM(WEAPON_ZONE_REPULSOR, Zone Repulsor),
	ITEM(WEAPON_MP5SD, MP5 - SD),
	ITEM(WEAPON_UMP45, UMP - 45),
	ITEM(WEAPON_XM1014, XM1014),
	ITEM(WEAPON_BIZON, PP - Bizon),
	ITEM(WEAPON_MAG7, MAG - 7),
	ITEM(WEAPON_NEGEV, Negev),
	ITEM(WEAPON_SAWEDOFF, Sawed - Off),
	ITEM(WEAPON_TEC9, Tec - 9),
	ITEM(WEAPON_TASER, Zeus x27),
	ITEM(WEAPON_HKP2000, P2000),
	ITEM(WEAPON_MP7, MP7),
	ITEM(WEAPON_MP9, MP9),
	ITEM(WEAPON_NOVA, Nova),
	ITEM(WEAPON_P250, P250),
	ITEM(WEAPON_SHIELD, Riot Shield),
	ITEM(WEAPON_SCAR20, SCAR - 20),
	ITEM(WEAPON_SG556, SG 553),
	ITEM(WEAPON_SSG08, SSG 08),
	ITEM(WEAPON_KNIFEGG, Golden Knife),
	ITEM(WEAPON_KNIFE, Knife),
	ITEM(WEAPON_FLASHBANG, Flashbang),
	ITEM(WEAPON_HEGRENADE, High Explosive Grenade),
	ITEM(WEAPON_SMOKEGRENADE, Smoke Grenade),
	ITEM(WEAPON_MOLOTOV, Molotov),
	ITEM(WEAPON_DECOY, Decoy Grenade),
	ITEM(WEAPON_INCGRENADE, Incendiary Grenade),
	ITEM(WEAPON_C4, C4 Explosive),
	ITEM(WEAPON_HEALTHSHOT, Medi - Shot),
	ITEM(WEAPON_KNIFE_T, Knife),
	ITEM(WEAPON_M4A1_SILENCER, M4A1 - S),
	ITEM(WEAPON_USP_SILENCER, USP - S),
	ITEM(WEAPON_CZ75A, CZ75 - Auto),
	ITEM(WEAPON_REVOLVER, R8 Revolver),
	ITEM(WEAPON_TAGRENADE, Tactical Awareness Grenade),
	ITEM(WEAPON_FISTS, Bare Hands),
	ITEM(WEAPON_BREACHCHARGE, Breach charge),
	ITEM(WEAPON_TABLET, Tablet),
	ITEM(WEAPON_MELEE, Knife),
	ITEM(WEAPON_AXE, Axe),
	ITEM(WEAPON_HAMMER, Hammer),
	ITEM(WEAPON_SPANNER, Wrench),
	ITEM(WEAPON_KNIFE_GHOST, Spectral Shiv),
	ITEM(WEAPON_FIREBOMB, Fire Bomb),
	ITEM(WEAPON_DIVERSION, Diversion),
	ITEM(WEAPON_FRAG_GRENADE, Frag Grenade),
	ITEM(WEAPON_SNOWBALL, Snowball),
	ITEM(WEAPON_BUMPMINE, Bump Mine),
	ITEM(WEAPON_BAYONET, Bayonet),
	ITEM(WEAPON_KNIFE_CSS, Classic Knife),
	ITEM(WEAPON_KNIFE_FLIP, Flip Knife),
	ITEM(WEAPON_KNIFE_GUT, Gut Knife),
	ITEM(WEAPON_KNIFE_KARAMBIT, Karambit),
	ITEM(WEAPON_KNIFE_M9_BAYONET, M9 Bayonet),
	ITEM(WEAPON_KNIFE_TACTICAL, Huntsman Knife),
	ITEM(WEAPON_KNIFE_FALCHION, Falchion Knife),
	ITEM(WEAPON_KNIFE_SURVIVAL_BOWIE, Bowie Knife),
	ITEM(WEAPON_KNIFE_BUTTERFLY, Butterfly Knife),
	ITEM(WEAPON_KNIFE_PUSH, Shadow daggers),
	ITEM(WEAPON_KNIFE_CORD, Paracord Knife),
	ITEM(WEAPON_KNIFE_CANIS, Survival Knife),
	ITEM(WEAPON_KNIFE_URSUS, Ursus Knife),
	ITEM(WEAPON_KNIFE_GYPSY_JACKKNIFE, Navaja Knife),
	ITEM(WEAPON_KNIFE_OUTDOOR, Nomad Knife),
	ITEM(WEAPON_KNIFE_STILETTO, Stiletto Knife),
	ITEM(WEAPON_KNIFE_WIDOWMAKER, Talon Knife),
	ITEM(WEAPON_KNIFE_SKELETON, Skeleton Knife),
	ITEM(STUDDED_BROKENFANG_GLOVES, Broken Fang Gloves),
	ITEM(STUDDED_BLOODHOUND_GLOVES, Bloodhound Gloves),
	ITEM(T_GLOVES, T Gloves),
	ITEM(CT_GLOVES, CT Gloves),
	ITEM(SPORTY_GLOVES, Sport Gloves),
	ITEM(SLICK_GLOVES, Slick Gloves),
	ITEM(LEATHER_HANDWRAPS, Hand Wraps),
	ITEM(MOTORCYCLE_GLOVES, Motorcycle Gloves),
	ITEM(SPECIALIST_GLOVES, Specialist Gloves),
	ITEM(STUDDED_HYDRA_GLOVES, Hydra Gloves)
};

const std::string& getWeaponName(const WeaponID weaponId)
{
	if (const auto it = names.find(weaponId); it != names.end()) {
		return it->second;
	}
	return names.at(WeaponID::WEAPON_INVALID);
}
